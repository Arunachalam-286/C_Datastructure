#include <stdio.h>
#include <stdlib.h>

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target, int* returnSize) {
    // Allocate memory for the result
    int* result = (int*)malloc(2 * sizeof(int));
    *returnSize = 2;

    // Brute Force: Check every pair of elements
    for (int i = 0; i < numsSize - 1; i++) {
        for (int j = i + 1; j < numsSize; j++) {
            if (nums[i] + nums[j] == target) {
                result[0] = i; // Store the indices of the elements
                result[1] = j;
                return result;
            }
        }
    }

    // If no solution is found (although the problem states there is always one)
    *returnSize = 0;
    return NULL;
}

int main() {
    int nums[] = {2, 7, 11, 15};
    int target = 9;
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    int returnSize;

    // Call the twoSum function
    int* result = twoSum(nums, numsSize, target, &returnSize);

    // Print the result
    if (result != NULL && returnSize == 2) {
        printf("Indices: [%d, %d]\n", result[0], result[1]);
        free(result); // Free the allocated memory
    } else {
        printf("No solution found.\n");
    }

    return 0;
}
